////////////////////////////////////////////////////////////////////
///////////////////////////  Settings  ////////////////////////////
////////////////////////////////////////////////////////////////////
#import "@preview/fletcher:0.5.3" as fletcher: diagram, node, edge
#show link: underline

// Fonts
#set text(font: (
  (name: "libertinus serif"),
  "Noto Serif CJK SC"
))

// Paragraph indent
#set par(first-line-indent: 1em)

// Enable justification
#set par(justify: true)

////////////////////////////////////////////////////////////////////
////////////////////////////  Title  ///////////////////////////////
////////////////////////////////////////////////////////////////////
// Title
#align(center, text(17pt)[
  What I have learnt today
])

// Author and date
#grid(
  columns: (1fr),
  align(center)[
Author: 秦宇轩 (QIN Yuxuan) \
Last compiled at #datetime.today().display() \
  ],
)



///////////////////////////////////////////////////////////////////
////////////////////////  Table of Contents  //////////////////////
///////////////////////////////////////////////////////////////////
#outline()
#line(length: 100%)



///////////////////////////////////////////////////////////////////
///////////////////////////  Macros  //////////////////////////////
///////////////////////////////////////////////////////////////////
#show "Grp": $bold(upright(G r p))$
#show "Set": $bold(upright(S e t))$
#show "ACF": $bold(upright(A C F))$
#show "Field": $bold(upright(F i e l d))$
#show "Ring": $bold(upright(R i n g))$
#show "End": $bold(upright(E n  d))$
#show "CAT": $bold(upright(C A T))$
#show "Mnd": $bold(upright(M n d))$


This is a diary-like note that recording what I have learnt that day, so I try to keep them short and readable instead of formal, but if furthur proofs or descriptions are needed then I would like to leave a pointer to my other notes.

= 2025

== 06-30: $F^times$ is cyclic
For finite field $F$, the multiplicative group $F^times$ is cyclic. This result can be used to prove that every finite field is gained from a quotient like $F_p [x] \/ (pi (x))$, for some prime $p$ and monic irreducible $pi (x)$.

*Main idea*: a group $G$ is cyclic iff there is an element $g$ such that $h = g^k$ for any other element $h$ and some $k$, so we must have $"ord" g = |G|$. But by Lagrange theorem we alyways have $"ord" g | |G|$ for any $g$ in $G$, so it suffices to prove $|G| <= "ord" g$. Thanks to the lemma below, we have $h^("ord" g) = 1$ for all $h$. So the polynomial $x^("ord" g) = 1$ has $|F^times|$ roots, which implies $|F^times| <= "ord" g$.

*Lemma*: In finite ablian group, the order of every element divides the maximal order. (It's fun to prove)

_Ref._ #link("https://kconrad.math.uconn.edu/blurbs/galoistheory/finitefields.pdf")[_Finite Field_. Conrad].

== 07-05: Compact theorem (by Ultraproduct)
- Ultraproduct: suppose $(A_i)_(i in I)$ is a bunch of structure in language $L$, then we can construct a new structure $cal(A)$ using them, provieded am ultrafilter $ cal(U)$ on $I$:
$ cal(A) := product_cal(U) A_i := (product_(i in I) A_i) \/ ~_cal(U). $

- Los theorem: A formula is ture in an ultraproduct, if and only if this formula is ture in _many_ smaller models which are used to made that ultraproduct. ("many" is defined by the ultrafilter.)
- Proof of Compact theorem: The model you want is the ultraproduct $product_cal(U) A_i$ where $(A_i) _(i in I)$, which is indexed by the set $I$ of all finite sub-theory of given theory $T$, are models of $i in I$ (by assumption these models must exist). To prove all formula $phi$ in $T$ are vaild in that ultraproduct, one consult for Los theorem. (The ultrafilter needed by Los theorem can just be solved out by your desire of "makeing $cal(A)$ a model of $T$".)

A little interesting result: Suppose $cal(U)_A$ is an ultrafilter generated by $A$ on $I$ (thus is priciple), then
$ {cal(U)_A subset B: B "ultrafilter on I"} tilde.eq {V: V "ultrafilter on A"}. $

This can be used to prove every priciple ultrafilter is generated by a singleton in $cal(P)(I)$ i.e., by a single subset of $I$, or equivalentlly, every non-principle ultrafilter must contain the Frechet filter (consists of precisely all "cofinite" subsets of $I$) as a subset.

_Ref._ #link("https://link.springer.com/book/10.1007/978-3-319-92414-4")[_Sеts, Models and Proofs_ (Section 2.5.1). Ieke Moerdijk and Jaap van Oosten].

== 07-06: $CC$ is the ultraproduct of $(overline(FF_p))_(p "prime")$
Do not know why yet. Can not even ensure the correctness, but I think...

== 07-07: $"Ran"_G G$ is a monad if it exists. Category admits arbitrary large limit must be a poset.
This is the construction of socalled *codensity* monad of an arbitrary functor $G: A -> B$, and the monadness can be proved in a clever way:

Define a category $r_G$ whose:
- Objects: $(X: B -> B, x: X G => G)$, i.e., right extensions of $G$;
- Morphisms between $(X, x)$ and $(Y, y)$: Natural transformations $eta: X => Y$ which campatible with $x$ and $y$.

And $(r_G, "id"_B, compose)$ is a (strict) monoidal category.

Then we find: $"Ran"_G G$ is the terminal object in $r_G$! So by common abstract nonsense argument, it has an unique monoid structure.

_Ref._ 
 - #link("http://www.tac.mta.ca/tac/volumes/28/13/28-13.pdf")[_CODENSITY AND THE ULTRAFILTER MONAD_ (Section 5). Tom Leinster].
 - #link("https://ncatlab.org/nlab/show/complete+small+category#CompleteSmallCategoriesArePosets")[complete small category, Theorem 2.1. ncatlab].

== 07-12: Adjoint Functor Theorem (and the free group functor)
In this section we fix a Grothendieck universe $UU$ and all "complete" are intepreted as "$UU$-small complete".

*Adjoint Functor Theorem*: For $G: cal(A) -> cal(X)$ a continuous functor with complete domain $cal(A)$, it has a _left adjoint_ $F: cal(X) -> cal(A)$ if and only if the nutorious solution set condition is satisfied: For all $x in cal(X)$ there is a bunch of objects $a^x_i in cal(A)$ indexed by a small set such that there are a bunch of morphisms $eta^x_i: x -> G a^x_i$ which form an initial class in the comma category $(x arrow.b G)$.

The solution set condition is just a combinition of two _small_ facts:
  + For a _small complete_ category with _small_ hom-sets, a initial class produce the initial object (tricky);
  + The unit of a adjunction $eta: "Id"_(cal(X)) => G F$ is made up of initial objects of comma categories $(x arrow.b G)$ for all $x in cal(X)$ (ordinary observation).

The solution set condition is just the result of applying fact 1 to fact 2. And, as your expectation, $F x := a_x$.

I have a sense that this solution set condition is just a rephrasement of $"Ran"_G "Id"_A$ is a absolute right Kan extension.

*Application*: We now show the existence of free group functor: By the Adjoint Functor Theorem and the well known fact that $bold("Grp")$ is complete, we just need to construct an initial class for each set $S in bold("Set")$. In the following proof, $U: bold("Grp") -> bold("Set")$ is the forgetful functor, we want its right adjoint.

For an arbitrary morphism $g: S -> U H$ where $S$ is a set and $H$ a group, good candidates of the solution set are those subgroups generated by $"im" g$, note that the elements of $angle.l "im" g angle.r$ are all of the form $g(s_1)^alpha g(s_2)^alpha dots.h.c g(s_n)^alpha$ where $alpha = plus.minus 1$ and $s_i$ are not necessarily diffferent, i.e. every element of this generated subgroup is always a finite composition of elements in $"im" g$, so the cardinality of $angle.l "im" g angle.r$ is bounded by $|S| + alef_0$, for any $g$, for any $H$.

Furthur more, the number of group structures on $|S| + alef_0$ is also bounded (by simple estimation). So, by the Axiom of Choice, we choose a group from each isomorphic class of those group structures and gather these representations up and obtain the solution set.

Finally, we get the free group functor.

_Ref._ #link("https://pages.jh.edu/rrynasi1/NewFoundations4Math/Literature/Textbooks/Mac_Lane1998CategoriesForTheWorkingMathematician.2ndEdition.pdf")[_Category Theory for Working Mathematicians_ (Chapter V, Section 6). Mac Lane].

== 07-14: Lefschetz principle and Ax-Grothendieck theorem
*Ax-Grothendieck theorem*: For a bunch of polynomials $f_i(t_1, dots, t_n) in CC[t_1, dots, t_n]$, if they are all injective viewed as a function $CC^n -> CC$, then the composed polynomial function $F(bold(x)) := (f_1 (bold(x)), dots, f_n (bold(x))) : CC^n -> CC^n$ is automatically surjective (Note that when $n = 1$ Ax-Grothendieck theorem is just equivalent to the algebraic closeness of $CC$ and thus this theorem is a generalised version of algebraic closeness in some sense).

To prove it (from a model theory point of view), we need following theorems, for $p$ prime or zero:

$"ACF"_p$ *is complete*: Thus any algebraic closed field with same characteristic is elementary equivalent. (For proof see notes on 07-15)

*Lefschetz principle*: For $"ACF"_p$ the theory of algebraic closed field with characteristic $p$ and a $cal(L)_("ring")$-sentence $phi$, the following are equivalent:

  + For almost all primes $p$, $"ACF"_p tack.r.double phi$;
  + For infinite many primes $p$, $"ACF"_p tack.r.double phi$;
  + $"ACF"_0 tack.r.double phi$;
  + $CC tack.r.double phi$;

  _proof_. 
           - 1 $=>$ 2: Obvious;
           - 2 $=>$ 3: Note that $"ACF"_0 := "ACF" union {(forall x, p x != 0) : p "prime"}$, and every finite subtheory of $"ACF"_0$ is satisfiable (the characteristic of a field is the _smallest_ number $p$ such that $forall x, p x = 0$) by the models of $"ACF"_p$ for some big enough prime $p$;
           - 3 $=>$ 1: Now we play a trick: proof by contrapositive. So we are now trying to prove ($not (1)$ implies $not (3)$), by definition $not (1)$ means "For infinite many primes $p$, $"ACF"_p tack.r.double not phi$", which impiles $"ACF"_0 tack.r.double not phi$ by (2 $=>$ 3);
           - 3 $<=>$ 4: 
                      - 3 $=>$ 4: By definition;
                      - 4 $=>$ 3: Since $"ACF"_0$ is complete.

The main idea of proving Ax theorem by Lefschetz property is that the theorem itself is just a $cal(L)_("ring")$-sentence $phi$, so to prove $CC tack.r.double phi$, by Lefschetz principle it suffices to prove $"ACF"_p tack.r.double phi$ for infinite many primes $p$, furthur, by the completeness of $"ACF"_p$ it is equivalent to prove $overline(FF)_p = union.big_n FF_(p^(n!)) tack.r.double phi$ for infinite many primes $p$.

And when restricted to a finite field, injective always implies surjective, so $F$ is surjective on all $FF_(p^(n!))$ since it is global injective, and thus surjective on $overline(FF)_p$. The sentence $phi$ is actually true for all primes $p$ and by Lefschetz principle we are done.

_Thought_. Lefschetz priciple is definitly useful: We can investigate "algebraic property" of any algebraic closed field by investigate $CC$, which can be studied by analytic methods.

_Ref_. Model Theory Lectures by #link("https://www.math.uni.wroc.pl/~pkowa/english.html")[Prof. Piotr Kowalski] at #link("https://nesinkoyleri.org/en/main-page/")[Nesin Mathematics Village] in Turkey. Availabe on #link("https://www.bilibili.com/video/BV1ZZ4y1r7Yu?p=10")[哔哩哔哩] and #link("https://www.youtube.com/watch?v=0XzEw2KH_wo&list=PLLxG_np9o-2cf3CawSVL9AO9f7BaDbGC4&index=10")[Youtube].

== 07-15: $"ACF"_p$ is complete
To prove it we need a lemma: Any extension of an _algebraic closed_ field is actually an elementary extension of the base field (This is not trivial since there may be non-algebraic extensions, of course for algebraic extensions they actually must be isomorphic so everything is fine). All following numberings of theorems and corollaries are from 李文威《代数学方法卷一》.

_proof of lemma_. By assumption we have an extension $E arrow.r.hook F$ where $E$ is algebraic closed, which implies $F$ is also algebraic closed due to the property of algebraic closed fields.

To produce something elementary equivalent to an given object, the immediately idea is Lowenheim-Skolem theorem: choose a large enough cardinal $kappa$ and we obtain two fields $E'$ and $F'$ with both cardinal $kappa$ and elementary equivalent to $E$ and $F$, respectively. So for any $cal(L)_("ring") union E$-sentence $phi$, we have $E equiv_E E'$, and since $F equiv_F F'$ and $F$ is an extension of $E$ we have also $F equiv_E F'$.

The last part of this proof is, as you have guessed, to show that $E' equiv_E F'$, but thanks to algebraists, there are several theorems in field theory ensure that these two fields are actually $E$-isomorphic! Details: By (推论 8.8.7) we only need to show that transcedence degrees of these two extensions are equal $"trdeg"_E E' = "trdeg"_E F'$, let us denote the transcedence basis of $E'$ and $F'$ over the base field $E$ as $T_1$ and $T_2$ respectively. By (命题 8.1.13) we have $|E(T_1)| = |E'| = kappa$ and $|E(T_2)| = |F'| = kappa$. So $|T_1| = |T_2| = kappa$, that is the transcedence degrees are equal. So we are done.

Of course the $E$-isomorphism between $E'$ and $F'$ preserves truth of $cal(L)_("ring") union E$-sentences, so $E' equiv_E F'$, since the elementary equivalent is a equivalence relation, finally $E equiv_E F$.

Note that for any two fields $X tack.r.double "ACF"_p$ and $Y tack.r.double "ACF"_p$, we can consider them as extensions of $overline(FF)_p$ which is algebraic closed, so by the lemma $X$ and $Y$ are all elementary equivalent to $overline(FF)_p$, thus they are elementary equivalent.

Every two models of $"ACF"_p$ are elementary equivalent, this implies $"ACF"_p$ itself is indeed complete.

_Remark_. There is another "more model-theoretic" proof based on Vaught's test, which claim that if a theory has only infinite models and is $kappa$-categorical for an infinite cardinal $kappa$, then it is complete. (Indeed $"ACF"_p$ is $kappa$-categorical for any uncountable $kappa$).
  This method do not need the cute lemma in our proof.


== 07-30: $"Grp"$ is cocomplete
That's another application of the famous Adjoint Functor Theorem.

It is well known that for any small category $J$ and $X$, the colimit functor $"colim"_J: [J, X] -> X$ is the *left adjoint* of the constant functor $Delta: X -> [J, X]$, and thus we are only need to apply the Adjoint Functor Theorem to $Delta: "Grp" -> [J, "Grp"]$.

  - Show that the domain of $Delta$ is *complete*: This is an elementary construction.
  - Show that there exists a solution class: For $X: J -> "Grp"$, define $lambda := |product.co_(j in J) X_j$, obviously the are only "a few" groups whose size is smaller than $lambda$ and all those groups form a *set* ${G_k}$, of course module isomorphism.
    - Now we claim that ${G_k}$ is a solution class: Indeed, for any other morphism $phi in (X arrow.b Delta)$, i.e. any natural transformation $phi: X -> Delta_H$ where $H$ is a group, the size of the subgroup generated by $union.big phi_j (X_j)$ is smaller than $lambda$ and thus this subgroup is isomorphic to $G_k$ for some $k$, and thus we obtain a bunch of inclusions $X_j arrow.r.hook G_k$, and since $phi$ is a natural transformation these inclusions form a natural transformation $X => Delta_(G_k)$. Since the group $H$ is arbitrary, we are done.

By the Adjoint Functor Theorem, $Delta$ has a left adjoint, which is definitly isomorphic to the colimit functor based on $J$.

_Ref_. #link("https://math.stackexchange.com/questions/180477/abstract-nonsense-proof-of-the-cocompleteness-of-the-category-of-groups")[_Abstract nonsense proof of the cocompleteness of the category of groups_. Math Stack Exchange. Accessed at 2025-07-30.]


== 08-23: Good use of Zorn's lemma

Here is an interesting proposition about any non-separable metric space $(X, d)$: For every non-countable subset $U subset X$ and any real number $theta > 0$, there exists $x, y in U$ such that $x != y$ and $d(x, y) >= theta$.

_proof_. Of course we need consider the opposite: suppose all non-countable subsets do not satisfy the property, or in a other way, all subsets admit that property are countable. Now we need to construct a countable dense subset.

By Zorn's lemma, we obtain a sequence of sets ${S_n}_(n in NN)$ such that for all $x, y in S_n$, we have $d(x, y) >= 1/n$ (for simplicity we name this property as "$1/n$-sparse") and $S_n$ is a maximal subset with this property (Indeed, any chain consists of $1/n$-sparse subsets has a greatest element: the union of elements of the chain). And we claim that $S := union_(n in NN) S_n$ is a dense countable subset.

  - It is countable: because $S_n$ is countable for all $n$;
  - $S_n$ is dense: For any $x in X$ and any real number $r > 0$, there exists $n$ such that $1/n < r$, we claim that the open ball $B(x, r) inter S_n$ is not empty. If not, then we have $d(x, s) >= r > 1/n$, thus $S_n union {x}$ is again a $1/n$-sparse subset, contradict with the maximality of $S_n$. Since $x$ and $r$ are arbitrary, $S$ is indeed dense.

_Ref_. _Lectures and Exercises on Functional Analysis_, Chapter 2, Exercise 2. A. Ya. Helemskii.


== 08-24: The codensity monad of $"Field" arrow.r.hook "Ring"$
I saw this result in Prof. Leinster's paper (see reference below). And I think there is something more deep behind this theorem, maybe related to commutative algebra or something but I don't know (yet).

So let's state it: the codensity monad $T$ of $"Field" arrow.r.hook "Ring"$ is $ T(R) = product_(p in "Spec"(R)) "Frac"(R slash p) $ where $"Frac"(R slash p)$ stands for the localization of $R$ with respect to a multiplicative subset $p$, and $R in "Ring"$.

_proof_. Prof. Leinster claim that $T(R)$ is the limit of $R slash "Field" arrow.r.hook "Field" arrow.r.hook "Ring"$. And by considering the connected components (That is, the zigzag classes in a category) of $R slash "Field"$, we are only need to construct a morphism from $T(R)$ to each connected component since those components do nothing to each others anyway, and then assembly those morphisms together.

If two field $R -> k_1$ and $R -> k_2$ are in the same connected component of category $R slash "Field"$, then of course they share the same characteristic since they can communicate with each other, and furthur $ker (R -> k_1)$ is a prime ideal of $R$. Because the morphism between $k_1$ and $k_2$ is injective the kernels of $R -> k_i$ are the same. So we can classify the connected components by $"Spec"(R)$.

And we are lucky: the initial object in each connected component exists: $R arrow.r.twohead R slash p arrow.r.hook "Frac"(R slash p)$ by the universal property of field of fractions, so the limit of those initial objects is exactly $T(R)$. Since those initial objects are in diffferent connected components, the limit of them is exactly the product of them, i.e., $T(R) = product_(p in "Spec"(R)) "Frac"(R slash p)$. 

_Thought_. To compute a limit of a functor based on a category $B$, we can first classify the connected components of $B$, and compute the limit of each connected component and finally the product of those limits are what we need. Same argument also applies to co-limits, of course.

_Ref_. #link("http://www.tac.mta.ca/tac/volumes/28/13/28-13.pdf")[_CODENSITY AND THE ULTRAFILTER MONAD_, Example 5.1. Tom Leinster].


== 08-25: An algebra is amount to a functor
Suppose $T: cal(A) -> cal(A)$ is a monad and we want to find a $T$-algebra structure on an object $a in cal(A)$, under some mild assumptions of the completeness of $cal(A)$, we can consider the monad morphisms between $T$ and the endomorphism monad of $a$, i.e. $"End"_a$, and that's exactly what we need to do, in theory.

More precisely, we have a natural isomorphism:
$ "CAT" slash cal(A) (a: bb(1) -> cal(A), U^T: cal(A)^T -> cal(A)) tilde.eq "Mnd" (T, "End"_a), $
where $U^T$ is the forget functor from the Eilenberg-Moore category $cal(A)^T$ to $cal(A)$, and $"End"_a$ is the codensity monad of $a: bb(1) -> cal(A)$ which choose $a$.

Admit this result, we can immediately see that if there is a monad morphism between $T$ and $"End"_a$, then there must be a morphism $g$ such that 

#align(center)[
#diagram({
   node((-1, -1), [$bb(1)$])
   node((0, 0), [$cal(A)$])
   node((1, -1), [$cal(A)^T$])
   edge((-1, -1), (0, 0), [$a$], label-side: right, "->")
   edge((1, -1), (0, 0), [$U^T$], label-side: left, "->")
   edge((-1, -1), (1, -1), [$g$], label-side: left, "->")
})]

commutes.

So there exists $f: T x -> x$ in $cal(A)^S$ such that $U^T (f) = a$, where by definition $U^T (f) = x$. So we obtain a $T$-algebra structure on $a$.

_Thought_. Wow, interesting! But I need to find some applications (if they exist)...

_Ref_. #link("http://www.tac.mta.ca/tac/volumes/28/13/28-13.pdf")[_CODENSITY AND THE ULTRAFILTER MONAD_, Proposition 6.2, Example 6.3. Tom Leinster].
